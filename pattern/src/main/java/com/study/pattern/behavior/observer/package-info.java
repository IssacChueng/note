/**
 * 观察者模式<br/>
 * <p>
 *     定义对象之间的一种一对多的依赖关系,当其中一个对象的状态发生变化时,其相关依赖对象皆获取到通知并更新状态
 * </p>
 * <p>
 *     分为4种角色,抽象目标(被观察对象, Subject,也叫主题), 观察者(Observer), 具体目标(具体被观察对象,ConcreteSubject), 具体观察者(ConcreteObserver)<br/>
 *     抽象被观察者,定义与观察者的关联和取消关联方法,定义改变状态的方法<br/>
 *     抽象观察者,定义更新被观察者状态的方法<br/>
 *     具体被观察者,实现方法,当内部状态发生改变时,通知观察者<br/>
 *     具体观察者,维持一个指向观察者的引用,当接收到通知后,改变被观察者的状态
 * </p>
 */
package com.study.pattern.behavior.observer;